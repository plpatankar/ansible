---

- name: Create a security group
  local_action:
    module: ec2_group
    name: "{{ security_group }}"
    description: "{{ security_group_description }}"
    region: "{{ region }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: basic_firewall

- name: Launch given number of new EC2 Instance
  local_action: ec2
                assign_public_ip={{ public_ip_enable }}
                aws_access_key={{ access_key }}
                aws_secret_key={{ secret_key }}
                count={{count}}
                ebs_optimized={{ ebs_optimized }}
                group={{ security_group }}
                instance_type={{ instance_type}}
                image={{ image }}
                instance_initiated_shutdown_behavior={{ shutdown_behavior }}
                instance_profile_name={{ instance_profile_name }}
                instance_tags={{ instance_tags }}
                monitoring={{ enable_monitoring }}
                termination_protection={{ termination_protection }}
                wait=true
                wait_timeout={{ wait_timeout }}
                region={{ region }}
                keypair={{ keypair }}
                zone={{ zone }}
                vpc_subnet_id={{ vpc_subnet }}
  register: ec2

- name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
  local_action: lineinfile
                dest="./hosts"
                regexp={{ item.public_ip }}
                insertafter="[webserver]" line={{ item.public_ip }}
  with_items: "{{ ec2.instances }}"


- name: Wait for SSH to come up
  local_action: wait_for
                host={{ item.public_ip }}
                port=22
                state=started
                connect_timeout=30
  with_items: "{{ ec2.instances }}"

- name: Add tag to Instance(s)
  local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
  with_items: "{{ ec2.instances }}"
  args:
    tags:
      Name: webserver
